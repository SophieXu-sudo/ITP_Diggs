#Adam's secret key: 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
# install all packages we need

# pip install streamlit
# pip install streamlit_chat
# pip install openai
# pip install python-dotenv

# import those packages

#import openai
import streamlit as st
from streamlit_chat import message
import response_generator
import docxReader
import file_embedding
#from dotenv import load_dotenv

#Codes to set up our Chatbot v1.0
#openai.api_key = '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'
'''def generate_my_response(prompt):
    openai.api_key = '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'
    completion = openai.Completion.create(
        engine = 'davinci:ft-personal-2023-03-28-22-12-03',
        prompt = prompt,
        max_tokens = 1024,
        n = 1,
        stop = None,
        temperature = 0.1
    )
    message = completion.choices[0].text
    return message'''

def chat_page():
    st.title("Diggs Chatbot v2.0")
    if 'generated' not in st.session_state:
        st.session_state['generated'] = []
    if 'past' not in st.session_state:
        st.session_state['past'] = []
    user_input=st.text_input("You:",key='input')

    # call chatbot class in response_generator.py

    # df now is directly ggenerated by our docxReader, will adjust here when database is ready
    df = docxReader.docxreader('Diggs Info Repository Products Example.docx')
    df = file_embedding.embeddings(df)
    chatbot = response_generator.Chatbot
    
    if user_input:

        # generate prompt for GPT3.5
        prompt = chatbot.create_prompt(chatbot,df,user_input)
        # ask AI model for answer
        output=chatbot.gpt(chatbot,prompt)['answer']
        st.session_state['past'].append(user_input)
        st.session_state['generated'].append(output)
    # generate response in chatpage
    if st.session_state['generated']:
        for i in range(len(st.session_state['generated'])-1, -1, -1):
            message(st.session_state['past'][i],is_user=True,key=str(i)+'_user')
            message(st.session_state["generated"][i], key=str(i))
